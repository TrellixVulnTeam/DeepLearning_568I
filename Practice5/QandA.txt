Part 1

Task 1
Q1 Ans: (x_train, y_train), (x_test, y_test) = mnist.load_data()

Q2 Ans: Converts the labels to one-hot encoded vector of size equal to number of classes

Q3 Ans: model = models.Sequential()
	model.add(layers.Conv2D(32, (3, 3), activation='relu', input_shape=(32, 32, 3)))
	model.add(layers.MaxPooling2D((2, 2)))
	model.add(layers.Dropout(0.5))

Q4 Ans: model.compile(optimizer='adam',
              loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True),
              metrics=['accuracy'])
	history = model.fit(train_images, train_labels, epochs=10, 
                    validation_data=(test_images, test_labels))

Q5 Ans: model.add(layers.MaxPooling2D((2, 2)))
	model.add(Flatten())
	model.add(layers.Dense(64))
	model.add(layers.Dense(10, activation='softmax'))
